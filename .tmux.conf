############
# Binds
############
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

bind-key c new-window -c "#{pane_current_path}" # Open new windows at the same path as the pane they were created from.

bind-key -n C-h select-pane -L # Move right a pane.
bind-key -n C-j select-pane -D # Move down a pane.
bind-key -n C-k select-pane -U # Move up a pane.
bind-key -n C-l select-pane -R # Move left a pane.
bind-key s split-window -v -c "#{pane_current_path}" # Create a new pane below the current one.
bind-key v split-window -h -c "#{pane_current_path}" # Create a new pane to the right of the current one.

# Resize panes.
bind-key -n S-Left resize-pane -L 2
bind-key -n S-Right resize-pane -R 2
bind-key -n S-Down resize-pane -D 1
bind-key -n S-Up resize-pane -U 1
bind-key -n C-Left resize-pane -L 10
bind-key -n C-Right resize-pane -R 10
bind-key -n C-Down resize-pane -D 5
bind-key -n C-Up resize-pane -U 5

bind-key j choose-tree # View all open sessions and windows.
unbind d # Remove default lowercase d binding for detaching the session.
bind-key D detach # Detach the current session.

# Open neovim for in a new pane to the right for the current directory.
bind-key e split-window -h -c "#{pane_current_path}" "nvim"

# Take the current pane and send it to a new window while keeping focus on the current window.
bind-key b break-pane -d
# Break the current pane out into a new session.
bind-key B send-keys 'tat && exit' 'C-m'
# Kill the current session and then switch to a different session. If there are no other sessions, tmux closes.
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

##########
# Options
##########
set-option -g default-terminal "screen-256color" # Use more colors.
set-option -sg escape-time 0 # Remove delay after hitting escape. Essential if you're using vim.
set-option -g allow-rename off # Don't overwrite user created window names.

############
# Statusbar
############
set-option -g status-bg "#666666" # Set status bar background color.
set-option -g status-fg "#aaaaaa" # Set status bar text color.
set-option -g status-left-length 50 # Set status bar left side length.
set-option -g base-index 1 # Use 1 based indexing.
set-option -g renumber-windows on # Renumber windows as they are created and destroyed.

##########
# Copy Mode
##########
set -g mouse on

# # Vi copypaste
setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"

#####################
# vim-tmux-navigator
#####################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
        bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
        bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
        bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
        bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
        bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
        bind-key -T copy-mode-vi C-h select-pane -L
        bind-key -T copy-mode-vi C-j select-pane -D
        bind-key -T copy-mode-vi C-k select-pane -U
        bind-key -T copy-mode-vi C-l select-pane -R
        bind-key -T copy-mode-vi C-\ select-pane -l
