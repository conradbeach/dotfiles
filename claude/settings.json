{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(bundle exec parallel_rspec:*)",
      "Bash(bundle exec rails:*)",
      "Bash(bundle exec rspec:*)",
      "Bash(bundle exec rubocop:*)",
      "Bash(bundle list:*)",
      "Bash(bundle show:*)",
      "Bash(bundle update:*)",
      "Bash(cat:*)",
      "Bash(chp)",
      "Bash(exit)",
      "Bash(find:*)",
      "Bash(gem list:*)",
      "Bash(gh pr:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git log:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(magick:*)",
      "Bash(mkdir:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(ruby:*)",
      "Bash(sed:*)",
      "Bash(y)",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "mcp__Linear__get_issue",
      "mcp__Linear__list_comments",
      "mcp__Linear__list_issue_statuses",
      "mcp__Linear__list_issues",
      "mcp__Linear__list_my_issues",
      "mcp__Linear__list_teams",
      "mcp__Linear__list_users",
      "mcp__Playwright__browser_click",
      "mcp__Playwright__browser_close",
      "mcp__Playwright__browser_console_messages",
      "mcp__Playwright__browser_evaluate",
      "mcp__Playwright__browser_navigate",
      "mcp__Playwright__browser_snapshot",
      "mcp__Playwright__browser_take_screenshot",
      "mcp__Playwright__browser_type",
      "mcp__Rails__analyze_models",
      "mcp__Rails__analyze_controller_views",
      "mcp__Rails__analyze_environment_config",
      "mcp__Rails__get_file",
      "mcp__Rails__get_routes",
      "mcp__Rails__get_schema",
      "mcp__Rails__list_files",
      "mcp__Rails__load_guide",
      "mcp__Rails__project_info",
      "mcp__Rails__switch_project",
      "mcp__Rollbar__get-item-details",
      "mcp__Rollbar__list-items",
      "WebFetch(domain:anthropic.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:ruby-lang.org)",
      "WebSearch"
    ],
    "deny": []
  },
  "model": "opusplan",
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "command -v osascript && (osascript -e 'tell application \"System Events\" to set frontApp to name of first application process whose frontmost is true' | grep -q 'iTerm2' || terminal-notifier -title 'Claude Code' -message 'Claude is waiting for your response.') || true"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "command -v osascript && (osascript -e 'tell application \"System Events\" to set frontApp to name of first application process whose frontmost is true' | grep -q 'iTerm2' || terminal-notifier -title 'Claude Code' -message 'Claude is waiting for your response.') || true"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); model_name=$(echo \"$input\" | jq -r '.model.display_name'); printf \"\\033[34m%s\\033[0m\" \"$model_name\""
  },
  "feedbackSurveyState": {
    "lastShownTime": 1754086011803
  }
}
